caption = "\nSource: Data collected from Twitter's REST API via rtweet",
colour = "Retweets"
)
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
# scale_color_discrete(labels = c("retweet", "tweet")) +
labs(
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
# scale_color_discrete(labels = c("retweet", "tweet")) +
labs(
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
# scale_color_discrete(labels = c("retweet", "tweet")) +
labs(
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
# scale_color_discrete(labels = c("retweet", "tweet")) +
labs(
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
# scale_color_discrete(labels = c("retweet", "tweet")) +
labs(
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
# scale_color_discrete(labels = c("retweet", "tweet")) +
labs(
aaa
a
ggplot(early_users, aes(x=created_at, y=screen_name)) +
geom_line(aes(group = screen_name), color = "gray95") +
geom_point(aes(color = is_retweet)) +
theme_minimal() +
theme(panel.grid.major = element_blank()) +
scale_x_datetime(
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
# scale_color_discrete(labels = c("retweet", "tweet")) +
labs(
x = 'Time of tweet', y = 'Screen Name',
title = "Time of #PilarNosMiente Twitter post",
subtitle = "First tweets and users",
caption = "\nSource: Data collected from Twitter's REST API via rtweet",
colour = ''
)
ggplot(early_users, aes(x=created_at, y=screen_name)) +
geom_line(aes(group = screen_name), color = "gray95") +
geom_point(aes(color = is_retweet)) +
theme_minimal() +
theme(panel.grid.major = element_blank()) +
scale_x_datetime(
date_breaks = '15 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
scale_color_discrete(labels = c("tweet", "retweet")) +
labs(
x = 'Time of tweet', y = 'Screen Name',
title = "Time of #PilarNosMiente Twitter post",
subtitle = "First tweets and users",
caption = "\nSource: Data collected from Twitter's REST API via rtweet",
colour = ''
)
rt %>%
group_by(is_retweet) %>%
ts_plot("hours", tz = "Europe/Madrid") +
scale_color_discrete(labels = c("retweet", "tweet")) +
scale_x_datetime(
date_breaks = '1 hour',
labels = date_format('%H:%M\n%d-%b\n%Y', tz = 'Europe/Madrid')) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = c(0.9, 0.9), legend.text = element_text(size = 12),
legend.background = element_rect(fill="gray95", size=0.1, linetype="solid"),
panel.grid.major = element_blank()) +
labs(
x = NULL, y = NULL,
title = "Frequency of #PilarNosMiente Twitter post",
subtitle = "Tweet counts aggregated using 1-hour intervals\n",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
rt %>%
group_by(is_retweet) %>%
ts_plot("hours", tz = "Europe/Madrid") +
scale_color_discrete(labels = c("tweet", "retweet")) +
scale_x_datetime(
date_breaks = '1 hour',
labels = date_format('%H:%M\n%d-%b\n%Y', tz = 'Europe/Madrid')) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = c(0.9, 0.9), legend.text = element_text(size = 12),
legend.background = element_rect(fill="gray95", size=0.1, linetype="solid"),
panel.grid.major = element_blank()) +
labs(
x = NULL, y = NULL,
title = "Frequency of #PilarNosMiente Twitter post",
subtitle = "Tweet counts aggregated using 1-hour intervals\n",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
## test first creators and responders
rt %>%
arrange(created_at) %>%
slice(1:100) %>%
ggplot(aes(x = reorder(screen_name, created_at), y = created_at)) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = c(0.2, 0.9), legend.text = element_text(size = 12),
legend.background = element_rect(fill="gray95", size=0.1, linetype="solid"),
panel.grid.major = element_blank()) +
geom_line(aes(group = screen_name), color = "gray95") +
geom_point(aes(color = is_retweet)) +
scale_y_datetime(
date_breaks = '10 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
scale_color_discrete(labels = c("retweet", "tweet")) +
coord_flip() +
labs(
x = NULL, y = NULL,
title = "Early users tweeting #PilarNosMiente",
subtitle = "Time of tweet creation\n",
caption = "\nSource: Data collected from Twitter's REST API via rtweet",
colour = ""
)
## test first creators and responders
rt %>%
arrange(created_at) %>%
slice(1:100) %>%
ggplot(aes(x = reorder(screen_name, created_at), y = created_at)) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = c(0.1, 0.9), legend.text = element_text(size = 12),
legend.background = element_rect(fill="gray95", size=0.1, linetype="solid"),
panel.grid.major = element_blank()) +
geom_line(aes(group = screen_name), color = "gray95") +
geom_point(aes(color = is_retweet)) +
scale_y_datetime(
date_breaks = '10 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
scale_color_discrete(labels = c("retweet", "tweet")) +
coord_flip() +
labs(
x = NULL, y = NULL,
title = "Early users tweeting #PilarNosMiente",
subtitle = "Time of tweet creation\n",
caption = "\nSource: Data collected from Twitter's REST API via rtweet",
colour = ""
)
## test first creators and responders
rt %>%
arrange(created_at) %>%
slice(1:100) %>%
ggplot(aes(x = reorder(screen_name, created_at), y = created_at)) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = c(0.05, 0.9), legend.text = element_text(size = 12),
legend.background = element_rect(fill="gray95", size=0.1, linetype="solid"),
panel.grid.major = element_blank()) +
geom_line(aes(group = screen_name), color = "gray95") +
geom_point(aes(color = is_retweet)) +
scale_y_datetime(
date_breaks = '10 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
scale_color_discrete(labels = c("retweet", "tweet")) +
coord_flip() +
labs(
x = NULL, y = NULL,
title = "Early users tweeting #PilarNosMiente",
subtitle = "Time of tweet creation\n",
caption = "\nSource: Data collected from Twitter's REST API via rtweet",
colour = ""
)
## test first creators and responders
rt %>%
arrange(created_at) %>%
slice(1:100) %>%
ggplot(aes(x = reorder(screen_name, created_at), y = created_at)) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = c(0.1, 0.95), legend.text = element_text(size = 12),
legend.background = element_rect(fill="gray95", size=0.1, linetype="solid"),
panel.grid.major = element_blank()) +
geom_line(aes(group = screen_name), color = "gray95") +
geom_point(aes(color = is_retweet)) +
scale_y_datetime(
date_breaks = '10 min',
labels = date_format('%H:%M', tz = 'Europe/Madrid')) +
scale_color_discrete(labels = c("retweet", "tweet")) +
coord_flip() +
labs(
x = NULL, y = NULL,
title = "Early users tweeting #PilarNosMiente",
subtitle = "Time of tweet creation\n",
caption = "\nSource: Data collected from Twitter's REST API via rtweet",
colour = ""
)
install.packages(c("backports", "BH", "boot", "broom", "callr", "caTools", "class", "cli", "clipr", "codetools", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "e1071", "ellipsis", "fansi", "fastmap", "fields", "forcats", "foreach", "Formula", "fs", "generics", "ggplot2", "ggthemes", "gh", "git2r", "glue", "gower", "gplots", "h2o", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "isoband", "iterators", "jsonlite", "kableExtra", "keras", "KernSmooth", "knitr", "labeling", "later", "lattice", "lava", "lubridate", "magick", "magrittr", "MASS", "Matrix", "memoise", "mgcv", "mlflow", "modelr", "nlme", "nnet", "openssl", "pillar", "pkgbuild", "pkgload", "PKI", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "readr", "recipes", "rematch2", "remotes", "reprex", "reticulate", "rex", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstudioapi", "rversions", "rvest", "shiny", "spam", "spatial", "SQUAREM", "stringi", "survival", "swagger", "sys", "tensorflow", "testthat", "tfhub", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "usethis", "vctrs", "withr", "xfun", "xml2", "xts"))
install.packages(c("backports", "BH", "boot", "broom", "callr", "caTools", "class", "cli", "clipr", "codetools", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "e1071", "ellipsis", "fansi", "fastmap", "fields", "forcats", "foreach", "Formula", "fs", "generics", "ggplot2", "ggthemes", "gh", "git2r", "glue", "gower", "gplots", "h2o", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "isoband", "iterators", "jsonlite", "kableExtra", "keras", "KernSmooth", "knitr", "labeling", "later", "lattice", "lava", "lubridate", "magick", "magrittr", "MASS", "Matrix", "memoise", "mgcv", "mlflow", "modelr", "nlme", "nnet", "openssl", "pillar", "pkgbuild", "pkgload", "PKI", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "readr", "recipes", "rematch2", "remotes", "reprex", "reticulate", "rex", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstudioapi", "rversions", "rvest", "shiny", "spam", "spatial", "SQUAREM", "stringi", "survival", "swagger", "sys", "tensorflow", "testthat", "tfhub", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "usethis", "vctrs", "withr", "xfun", "xml2", "xts"))
install.packages(c("backports", "BH", "boot", "broom", "callr", "caTools", "class", "cli", "clipr", "codetools", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "e1071", "ellipsis", "fansi", "fastmap", "fields", "forcats", "foreach", "Formula", "fs", "generics", "ggplot2", "ggthemes", "gh", "git2r", "glue", "gower", "gplots", "h2o", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "isoband", "iterators", "jsonlite", "kableExtra", "keras", "KernSmooth", "knitr", "labeling", "later", "lattice", "lava", "lubridate", "magick", "magrittr", "MASS", "Matrix", "memoise", "mgcv", "mlflow", "modelr", "nlme", "nnet", "openssl", "pillar", "pkgbuild", "pkgload", "PKI", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "readr", "recipes", "rematch2", "remotes", "reprex", "reticulate", "rex", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstudioapi", "rversions", "rvest", "shiny", "spam", "spatial", "SQUAREM", "stringi", "survival", "swagger", "sys", "tensorflow", "testthat", "tfhub", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "usethis", "vctrs", "withr", "xfun", "xml2", "xts"))
install.packages(c("backports", "BH", "boot", "broom", "callr", "caTools", "class", "cli", "clipr", "codetools", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "devtools", "digest", "dplyr", "DT", "e1071", "ellipsis", "fansi", "fastmap", "fields", "forcats", "foreach", "Formula", "fs", "generics", "ggplot2", "ggthemes", "gh", "git2r", "glue", "gower", "gplots", "h2o", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "isoband", "iterators", "jsonlite", "kableExtra", "keras", "KernSmooth", "knitr", "labeling", "later", "lattice", "lava", "lubridate", "magick", "magrittr", "MASS", "Matrix", "memoise", "mgcv", "mlflow", "modelr", "nlme", "nnet", "openssl", "pillar", "pkgbuild", "pkgload", "PKI", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "readr", "recipes", "rematch2", "remotes", "reprex", "reticulate", "rex", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rstudioapi", "rversions", "rvest", "shiny", "spam", "spatial", "SQUAREM", "stringi", "survival", "swagger", "sys", "tensorflow", "testthat", "tfhub", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "usethis", "vctrs", "withr", "xfun", "xml2", "xts"))
installr()
install.packages("installr")
install.packages(c("boot", "class", "codetools", "foreign", "KernSmooth", "Matrix", "nlme", "nnet", "spatial"))
library(caret)
update.packages(ask = FALSE, checkBuilt = TRUE)
a <- c(1, 2, 3)
a[1]
a[0]
a[2]
a[5]
a <- list("a", 1, TRUE)
a[1]
a[1, ,]
a <- list(uno = "a", dos = 1, tres = TRUE)
a$uno
## Primeros pasos en R
# Uso de variables en R:
a <- 5
b <- 7
a + b
# Vectores:
V <- c(a, b, 9)
W <- V + 1
mean(W)
x <- 1:5
V[2]
V[1:3]
# Listas:
L <- list("a", 1, TRUE)
L[[1]]
L[1]
M <- list(letter = "a", n = 1, c = TRUE)
M
M$letter
## Data frames
q <- c("Futbol", "Baloncesto", "Tenis", "Balonmano", "Voleibol")
df <- data.frame(x, y, q)
y <- -4:0
df <- data.frame(x, y, q)
df
names(df) <- c("Var X", "Var Y", "Sport")
df
df <- data.frame(Var_X=x, Var_Y=y, Sport=q)
df[1]
df['Var_X']
df$Var_Y
df[,1]
df[1:3, c('Var_X', 'Var_Y')]
df[1:3, c('Var_X', 'Var_Y')]
df[, "Sport", drop=TRUE]
unlink('OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code/introduccion_cache', recursive = TRUE)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
setwd("~/OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code")
iris_data <- read_csv("iris.csv")
iris_data <- read_csv("iris.csv")
iris_data <- read_csv2("iris.csv")
iris_data <- read_delim("iris.csv")
iris_data <- read_delim("iris.csv", delim = " ")
View(iris_data)
head(iris)
# Histograma
ggplot(data = iris_data) +
geom_histogram(aes(x = class), bins = 10)
# Histograma
ggplot(data = iris_data) +
geom_histogram(aes(x = class), bins = 10, stat = "count")
# Histograma
ggplot(data = iris_data) +
geom_histogram(aes(x = class), stat = "count")
ggplot(data = iris_data) +
geom_histogram(aes(x = sepal.length), bins = 10)
ggplot(data = iris_data) +
geom_histogram(aes(x = "sepal length"), bins = 10)
ggplot(data = iris_data) +
geom_histogram(aes(x = get("sepal length")), bins = 10)
ggplot(data = iris_data) +
geom_histogram(aes(x = c("sepal length")), bins = 10)
ggplot(data = iris_data) +
geom_histogram(aes(x = get("sepal length")), bins = 10)
iris_data <- make.names(names(iris_data), unique=TRUE)
# Leer datos
iris_data <- read_delim("iris.csv", delim = " ")
names(iris_data) <- make.names(names(iris_data), unique=TRUE)
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length))
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length), fill = "blue")
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length), fill = "green")
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length), fill = "green", color="red")
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length), fill = "green", color="red")
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length), color="red", fill = "green")
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length), fill = "light-gray")
ggplot(data = iris_data) +
geom_density(aes(x = sepal.length), fill = "lightgray")
# Gráfico de dispersión
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width))
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width, fill = class))
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width, color = class))
# Facets
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width, color = class)) +
facet_wrap(~class)
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width, color = class, shape = class))
# Facets
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width, color = class)) +
facet_wrap(~class)
# Gráficos sofisticados
g <- ggplot(data = iris_data)
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
labs(x = "Petal Length", y = "Petal Width") +
scale_color_discrete(name ="Clase", labels=c("Iris Setosa", "Iris Versicolor", "Iris Virginica"))
g +
labs(x = "Petal Length", y = "Petal Width",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
# Gráficos sofisticados
g <- ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width, color=class))
g +
labs(x = "Petal Length", y = "Petal Width",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
g +
theme_hc() + scale_fill_hc(labels = c('Yes', 'No')) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
g +
theme_hc() + scale_fill_hc(labels = c('Yes', 'No')) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
library(ggthemes)
g +
theme_hc() + scale_fill_hc(labels = c('Yes', 'No')) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021")
g +
theme_hc() + scale_fill_hc(labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021")
g +
theme_hc() + scale_fill_hc(labels = c('Yes', 'No')) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
# Gráficos sofisticados
g <- ggplot(data = iris_data)
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() + scale_color_hc(labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() + scale_color_hc(palette = "colorblind", labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() + scale_color_hc(palette = colorblind_pal(), labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() + scale_color_hc(palette = colorblind_pal, labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() + scale_color_hc(palette = "darkunica", labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() +
scale_color_hc(palette = "darkunica", labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
fill = "",
color = "")
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() +
scale_color_hc(palette = "darkunica", labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
color = "Variedad: ")
g +
geom_point(aes(x = petal.length, y = petal.width, color=class)) +
theme_hc() +
scale_color_hc(palette = "darkunica", labels = c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
labs(x = "Longitud del pétalo", y = "Anchura del pétalo",
title = "Visualización del dataset IRIS",
subtitle = "Análisis de variables más informativas para la clasificación de flores",
caption = "Sistemas Inteligentes para gestión en la empresa 2021",
color = "Variedad")
knit_with_parameters('~/OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code/iris.Rmd')
knitr::opts_chunk$set(echo = TRUE)
summary(iris)
summary(iris)
knitr::opts_chunk$set(echo = TRUE)
iris_data <- read_delim("iris.csv", delim = " ")
head(iris)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
iris_data <- read_delim("iris.csv", delim = " ")
head(iris)
iris_data <- read_delim(params$datos, delim = " ")
kable(head(iris))
library(kable)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
iris_data <- read_delim(params$datos, delim = " ")
kable(head(iris))
knitr::opts_chunk$set(message = FALSE)
library(knitr)
library(tidyverse)
iris_data <- read_delim(params$datos, delim = " ")
names(iris_data) <- make.names(names(iris_data), unique=TRUE)
kable(head(iris))
ggplot(data = iris_data) +
geom_histogram(aes(x = sepal.length), bins = params$n_bins)
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = petal.width, color = class, shape = class))
ggplot(data = iris_data) +
geom_point(aes(x = params$comparar_x, y = params$comparar_y, color = class, shape = class))
ggplot(data = iris_data) +
geom_point(aes(x = petal.length, y = params$comparar_y, color = class, shape = class))
ggplot(data = iris_data) +
geom_point(aes_string(x = parames$comparar_x, y = params$comparar_y, color = "class", shape = "class"))
ggplot(data = iris_data) +
geom_point(aes_string(x = params$comparar_x, y = params$comparar_y, color = "class", shape = "class"))
ggplot(data = iris_data) +
geom_point(aes_string(x = params$comparar_x, y = params$comparar_y, color = "class", shape = "class"))  +
labs(x = "Petal Length", y = "Petal Width") +
scale_color_discrete(name ="Clase", labels=c("Iris Setosa", "Iris Versicolor", "Iris Virginica"))
ggplot(data = iris_data) +
geom_point(aes_string(x = params$comparar_x, y = params$comparar_y, color = "class", shape = "class"))  +
labs(x = "Petal Length", y = "Petal Width") +
scale_color_discrete(name ="Clase", labels=c("Iris Setosa", "Iris Versicolor", "Iris Virginica")) +
scale_shape_discrete(name ="Clase", labels=c("Iris Setosa", "Iris Versicolor", "Iris Virginica"))
knit_with_parameters('~/OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code/iris.Rmd')
knit_with_parameters('~/OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code/iris.Rmd')
knit_with_parameters('~/OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code/iris.Rmd')
knit_with_parameters('~/OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code/iris.Rmd')
knit_with_parameters('~/OneDrive/Trabajo/docencia/2020-2021/master/Sistemas Inteligentes para Gestion en la Empresa/practicas/seminario 1/code/iris.Rmd')
install.packages("learnr")
a <- 5
b <- 9
V <- c(a, b, 9)
mean(V)
runApp('iris-shiny-app.R')
runApp('iris-shiny-app.R')
runApp('iris-shiny-app.R')
