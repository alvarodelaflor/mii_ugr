Title       : Synchronization Mechanisms for High-Performance Computing
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : October 29,  1993   
File        : a9496058

Award Number: 9496058
Award Instr.: Standard Grant                               
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1993     
Expires     : May 31,  1997        (Estimated)
Expected
Total Amt.  : $181677             (Estimated)
Investigator: James H. Anderson anderson@cs.unc.edu  (Principal Investigator current)
Sponsor     : U of NC Chapel Hill
	      300 Bynum Hall
	      Chapel Hill, NC  27514    919/962-5625

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 
Program Ref : 
Abstract    :
                   The design, analysis, and implementation of highly                        
              concurrent synchronization mechanisms shall be investigated.  In               
              the traditional approach to synchronization, conflicting                       
              operations are implemented as mutually exclusive "critical                     
              sections".  This has the effect of serializing operations, much                
              to the detriment of performance.  Such implementations also                    
              suffer from a lack of resiliency, as they are not immune to                    
              halting failures.  Highly concurrent synchronization mechanisms                
              minimize these shortcomings by either eliminating or reducing the              
              need for critical sections.  The research is divided into three                
              principal components.  The first component involves the                        
              development of highly concurrent synchronization mechanism and                 
              the development of tools for automatically incorporating such                  
              mechanisms in concurrent and distributed programs.  The second                 
              component is concerned with the analysis of synchronization                    
              mechanisms by means of discrete-event simulation.  The third and               
              final component is concerned with implementation, specifically                 
              the synchronization mechanisms on a variety of real-world                      
              computing applications.  The tools and algorithms developed will               
              be of use to system designers and application programmers alike,               
              providing a sound basis for the development of high-performance,               
              fault-tolerant distributed computing applications.
